<SyntaxDefinition name="Ruby" extensions=".rb" xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
	
	<Color name="Digits" foreground="DarkBlue" exampleText="0123456789" />
	<Color name="Char" foreground="Magenta" exampleText="char linefeed = '\n'" />
	<Color name="DocComment" foreground="Green" exampleText='""" comment' />
	<Color name="MultiLineComment" foreground="Green" exampleText="= comment" />
	<Color name="LineComment" foreground="Green" exampleText="// comment" />
	<Color name="String" foreground="Blue" exampleText='name = "Joe"' />
	<Color name="Punctuation" exampleText="a(b.c);" />
	<Color name="MethodCall" fontWeight="bold" foreground="MidnightBlue" exampleText="method(" />
	<Color name="BuiltInStatements" fontWeight="bold" foreground="MidnightBlue" exampleText="print 'hello'" />
	<Color name="ClassStatement" foreground="Blue" fontWeight="bold" exampleText="class Foo" />
	<Color name="ExceptionHandlingStatements" fontWeight="bold" foreground="Teal" exampleText="raise 'error'" />
	<Color name="FunctionDefinition" fontWeight="bold" foreground="Blue" exampleText="def MyFunction" />
	<Color name="Imports" fontWeight="bold" foreground="Green" exampleText='require "System.Xml"' />
	<Color name="IterationStatements" fontWeight="bold" foreground="Blue" exampleText="for i in 0..5" />
	<Color name="JumpStatements" foreground="Navy" exampleText="return val" />
	<Color name="OperatorStatements" fontWeight="bold" foreground="DarkCyan" exampleText="not(a &amp;&amp; b)" />
	<Color name="NullStatement" foreground="Gray" exampleText="return nil" />
	<Color name="SelectionStatements" fontWeight="bold" foreground="Blue" exampleText="if (a)" />
	<Color name="BooleanStatements" foreground="DarkViolet" exampleText="return true" />
	<Color name="DefinedStatement" foreground="DarkViolet" exampleText="defined? a" />
	<Color name="ClassSelfStatement" foreground="DarkViolet" exampleText="self.a = ''" />
	<Color name="ClassInheritanceStatement" foreground="DarkViolet" exampleText="super(value)" />

	<Property name="LineComment" value="#"/>

	<RuleSet ignoreCase="false">
			
		<Span color="Char">
			<Begin>'</Begin>
			<End>'</End>
			<RuleSet>
				<!-- span for escape sequences -->
				<Span begin="\\" end="."/>
			</RuleSet>
		</Span>
		
		<Span color="DocComment" multiline="true">
			<Begin>"""</Begin>
			<End>"""</End>
		</Span>
		
		<Span color="MultiLineComment" multiline="true">
			<Begin>=begin</Begin>
			<End>=end</End>
		</Span>
		
		<Span color="LineComment">
			<Begin>\#</Begin>
		</Span>
		
		<Span color="String">
			<Begin>"</Begin>
			<End>"</End>
			<RuleSet>
				<!-- span for escape sequences -->
				<Span begin="\\" end="."/>
			</RuleSet>
		</Span>
		
		<Keywords color="BuiltInStatements">
			<Word>abort</Word>
			<Word>Array</Word>
			<Word>at_exit</Word>
			<Word>autoload</Word>
			<Word>binding</Word>
			<Word>callcc</Word>
			<Word>caller</Word>
			<Word>chomp</Word>
			<Word>chop</Word>
			<Word>eval</Word>
			<Word>exec</Word>
			<Word>exit</Word>
			<Word>fail</Word>
			<Word>Float</Word>
			<Word>fork</Word>
			<Word>format</Word>
			<Word>gets</Word>
			<Word>global_variables</Word>
			<Word>gsub</Word>
			<Word>Integer</Word>
			<Word>lambda</Word>
			<Word>proc</Word>
			<Word>load</Word>
			<Word>local_variables</Word>
			<Word>loop</Word>
			<Word>open</Word>
			<Word>p</Word>
			<Word>print</Word>
			<Word>print</Word>
			<Word>printf</Word>
			<Word>putc</Word>
			<Word>puts</Word>
			<Word>rand</Word>
			<Word>readline</Word>
			<Word>scan</Word>
			<Word>select</Word>
			<Word>set_trace_func</Word>
			<Word>sleep</Word>
			<Word>split</Word>
			<Word>sprintf</Word>
			<Word>srand</Word>
			<Word>String</Word>
			<Word>syscall</Word>
			<Word>system</Word>
			<Word>sub</Word>
			<Word>test</Word>
			<Word>throw</Word>
			<Word>trace_var</Word>
			<Word>trap</Word>
			<Word>untrace_var</Word>
		</Keywords>
		
		<Keywords color="ClassStatement">
			<Word>class</Word>
			<Word>module</Word>
			<Word>public</Word>
			<Word>protected</Word>
			<Word>private</Word>
		</Keywords>
		
		<Keywords color="ExceptionHandlingStatements">
			<Word>begin</Word>
			<Word>rescue</Word>
			<Word>ensure</Word>
			<Word>raise</Word>
			<Word>catch</Word>
		</Keywords>
		
		<Keywords color="FunctionDefinition">
			<Word>def</Word>
			<Word>end</Word>
			<Word>undef</Word>
		</Keywords>
		
		<Keywords color="Imports">
			<Word>require</Word>
			<Word>alias</Word>
		</Keywords>
		
		<Keywords color="IterationStatements">
			<Word>for</Word>
			<Word>do</Word>
			<Word>in</Word>
			<Word>while</Word>
			<Word>until</Word>
		</Keywords>
		
		<Keywords color="JumpStatements">
			<Word>break</Word>
			<Word>yield</Word>
			<Word>redo</Word>
			<Word>return</Word>
			<Word>retry</Word>
			<Word>next</Word>
		</Keywords>
	
		<Keywords color="OperatorStatements">
			<Word>and</Word>
			<Word>not</Word>
			<Word>or</Word>
		</Keywords>
		
		<Keywords color="NullStatement">
			<Word>nil</Word>
		</Keywords>
	
		<Keywords color="SelectionStatements">
			<Word>elsif</Word>
			<Word>else</Word>
			<Word>if</Word>
			<Word>then</Word>
			<Word>case</Word>
			<Word>unless</Word>
		</Keywords>
	
		<Keywords color="BooleanStatements">
			<Word>true</Word>
			<Word>false</Word>
		</Keywords>
		
		<Keywords color="DefinedStatement">
			<Word>defined</Word>
		</Keywords>
		
		<Keywords  color="ClassSelfStatement">
			<Word>self</Word>
		</Keywords>
		
		<Keywords color="ClassInheritanceStatement">
			<Word>super</Word>
		</Keywords>
		
		<Rule color="MethodCall">\b[\d\w_]+(?=(\s*\())</Rule>
		<Rule color="Digits">\b0[xX][0-9a-fA-F]+|(\b\d+(\.[0-9]+)?|\.[0-9]+)([eE][+-]?[0-9]+)?</Rule>
		
		<Rule color="Punctuation">
			[?,.;()\[\]{}+\-/%*&lt;&gt;^+~!|&amp;]+
		</Rule>
	</RuleSet>
</SyntaxDefinition>
